[{"C:\\Users\\Hasindu Rangika\\Desktop\\ReactAPP\\todolist\\React-Dictionary\\src\\index.js":"1","C:\\Users\\Hasindu Rangika\\Desktop\\ReactAPP\\todolist\\React-Dictionary\\src\\App.js":"2","C:\\Users\\Hasindu Rangika\\Desktop\\ReactAPP\\todolist\\React-Dictionary\\src\\reportWebVitals.js":"3","C:\\Users\\Hasindu Rangika\\Desktop\\ReactAPP\\todolist\\React-Dictionary\\src\\SearchForm.js":"4"},{"size":535,"mtime":1676918793268,"results":"5","hashOfConfig":"6"},{"size":9150,"mtime":1677530614531,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1676918793698,"results":"8","hashOfConfig":"6"},{"size":1414,"mtime":1677519827749,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gj7l7c",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\Hasindu Rangika\\Desktop\\ReactAPP\\todolist\\React-Dictionary\\src\\index.js",[],[],"C:\\Users\\Hasindu Rangika\\Desktop\\ReactAPP\\todolist\\React-Dictionary\\src\\App.js",[],[],"C:\\Users\\Hasindu Rangika\\Desktop\\ReactAPP\\todolist\\React-Dictionary\\src\\reportWebVitals.js",[],[],"C:\\Users\\Hasindu Rangika\\Desktop\\ReactAPP\\todolist\\React-Dictionary\\src\\SearchForm.js",["23"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport fs from \"fs\";\r\n\r\nconst SearchForm = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [searchedWords, setSearchedWords] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault();\r\n    const formattedInput = input.trim().toLowerCase();\r\n    const words = fs.readFileSync(\"./data.txt\", \"utf-8\").split(\"\\n\");\r\n\r\n    const results = words.filter((word) =>\r\n      word.trim().toLowerCase().includes(formattedInput)\r\n    );\r\n    setSearchedWords([formattedInput, ...searchedWords]);\r\n    setSearchResults(results);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSearch}>\r\n        <input type=\"text\" value={input} onChange={handleInputChange} />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      {searchedWords.length > 0 && (\r\n        <div>\r\n          <p>Searched words: {searchedWords.join(\", \")}</p>\r\n        </div>\r\n      )}\r\n      {searchResults.length > 0 ? (\r\n        <ul>\r\n          {searchResults.map((result) => (\r\n            <li key={result}>{result}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No results found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n",{"ruleId":"24","severity":1,"message":"25","line":2,"column":8,"nodeType":"26","messageId":"27","endLine":2,"endColumn":13},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar"]