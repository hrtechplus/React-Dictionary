{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasindu Rangika\\\\Desktop\\\\ReactAPP\\\\todolist\\\\React-Dictionary\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState(\"\");\n  const handleSearch = async () => {\n    // format the search term\n    const formattedSearchTerm = searchTerm.trim().toLowerCase();\n\n    // fetch the data from the file\n    try {\n      const response = await axios.get(\"data.txt\");\n      const lines = response.data.split(\"\\n\");\n      const results = [];\n\n      // loop through the lines and find matches\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].trim().toLowerCase();\n        if (line.includes(formattedSearchTerm)) {\n          results.push(line);\n        }\n        if (line.includes(\"ප්‍රතිවරණය\")) {\n          // move the line with 'ප්‍රතිවරණය' to the front of the array\n          results.unshift(line);\n        }\n      }\n\n      // update the state with the results\n      setSearchResults(results);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Error loading data\");\n      setSearchResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      onKeyPress: e => {\n        if (e.key === \"Enter\") {\n          handleSearch();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this) : null, searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: result\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y99t3873sIBwml2lTIbIgJGcbKs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","error","setError","handleSearch","formattedSearchTerm","trim","toLowerCase","response","get","lines","data","split","results","i","length","line","includes","push","unshift","err","children","type","value","onChange","e","target","onKeyPress","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","result","index","_c","$RefreshReg$"],"sources":["C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const handleSearch = async () => {\n    // format the search term\n    const formattedSearchTerm = searchTerm.trim().toLowerCase();\n\n    // fetch the data from the file\n    try {\n      const response = await axios.get(\"data.txt\");\n      const lines = response.data.split(\"\\n\");\n      const results = [];\n\n      // loop through the lines and find matches\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].trim().toLowerCase();\n        if (line.includes(formattedSearchTerm)) {\n          results.push(line);\n        }\n        if (line.includes(\"ප්‍රතිවරණය\")) {\n          // move the line with 'ප්‍රතිවරණය' to the front of the array\n          results.unshift(line);\n        }\n      }\n\n      // update the state with the results\n      setSearchResults(results);\n      setError(\"\");\n    } catch (err) {\n      setError(\"Error loading data\");\n      setSearchResults([]);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        onKeyPress={(e) => {\n          if (e.key === \"Enter\") {\n            handleSearch();\n          }\n        }}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {error ? <div>{error}</div> : null}\n      {searchResults.length > 0 ? (\n        <ul>\n          {searchResults.map((result, index) => (\n            <li key={index}>{result}</li>\n          ))}\n        </ul>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,MAAMC,mBAAmB,GAAGP,UAAU,CAACQ,IAAI,EAAE,CAACC,WAAW,EAAE;;IAE3D;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,UAAU,CAAC;MAC5C,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC;MACvC,MAAMC,OAAO,GAAG,EAAE;;MAElB;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,MAAME,IAAI,GAAGN,KAAK,CAACI,CAAC,CAAC,CAACR,IAAI,EAAE,CAACC,WAAW,EAAE;QAC1C,IAAIS,IAAI,CAACC,QAAQ,CAACZ,mBAAmB,CAAC,EAAE;UACtCQ,OAAO,CAACK,IAAI,CAACF,IAAI,CAAC;QACpB;QACA,IAAIA,IAAI,CAACC,QAAQ,CAAC,YAAY,CAAC,EAAE;UAC/B;UACAJ,OAAO,CAACM,OAAO,CAACH,IAAI,CAAC;QACvB;MACF;;MAEA;MACAf,gBAAgB,CAACY,OAAO,CAAC;MACzBV,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZjB,QAAQ,CAAC,oBAAoB,CAAC;MAC9BF,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;EAED,oBACEN,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEzB,UAAW;MAClB0B,QAAQ,EAAGC,CAAC,IAAK1B,aAAa,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,UAAU,EAAGF,CAAC,IAAK;QACjB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;UACrBxB,YAAY,EAAE;QAChB;MACF;IAAE;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACFrC,OAAA;MAAQsC,OAAO,EAAE7B,YAAa;MAAAiB,QAAA,EAAC;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAC7C9B,KAAK,gBAAGP,OAAA;MAAA0B,QAAA,EAAMnB;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,GAAG,IAAI,EACjChC,aAAa,CAACe,MAAM,GAAG,CAAC,gBACvBpB,OAAA;MAAA0B,QAAA,EACGrB,aAAa,CAACkC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC/BzC,OAAA;QAAA0B,QAAA,EAAiBc;MAAM,GAAdC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,GACH,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;AAACnC,EAAA,CA3DQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}