{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),searchResults=_useState4[0],setSearchResults=_useState4[1];var handleSearch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var formattedTerm,_yield$axios$get,data,lines,filteredLines,index;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:// Format the search term\nformattedTerm=searchTerm.trim().toLowerCase();// Fetch the data file\n_context.next=3;return axios.get(\"/data.txt\");case 3:_yield$axios$get=_context.sent;data=_yield$axios$get.data;// Split the data into lines\nlines=data.split(\"\\n\");// Filter the lines that contain the search term\nfilteredLines=lines.filter(function(line){return line.toLowerCase().includes(formattedTerm);});console.log(\"filteredLines \".concat(filteredLines,\" --------------\"));/*filteredLines nothing\tඅභාවය, ආකිංචන්‍යය, කිසිත් නැතිබව, ශූන්‍යය,nothingness\tඅකිංචනය, අභාවය, ශූන්‍යය,nothings\tපොඩි පොඩි දේ, වැදගැම්මකට නැති දේ -------------- */ // If there are no results, show an error message\nif(filteredLines.length===0){setSearchResults([\"No results found\"]);}else{// Move the matching line to the top of the results\nindex=filteredLines.findIndex(function(line){return line.toLowerCase().includes(formattedTerm);});if(index!==0){filteredLines.splice(0,0,filteredLines.splice(index,1)[0]);}setSearchResults(filteredLines);}case 9:case\"end\":return _context.stop();}},_callee);}));return function handleSearch(){return _ref.apply(this,arguments);};}();var handleInputChange=function handleInputChange(event){setSearchTerm(event.target.value);};var handleKeyDown=function handleKeyDown(event){if(event.key===\"Enter\"){handleSearch();}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search\",value:searchTerm,onChange:handleInputChange,onKeyDown:handleKeyDown}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,children:\"Search\"}),searchResults.map(function(result,index){return/*#__PURE__*/_jsx(\"div\",{children:result},index);})]});}export default App;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","searchResults","setSearchResults","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formattedTerm","_yield$axios$get","data","lines","filteredLines","index","wrap","_callee$","_context","prev","next","trim","toLowerCase","get","sent","split","filter","line","includes","console","log","concat","length","findIndex","splice","stop","apply","arguments","handleInputChange","event","target","value","handleKeyDown","key","children","type","placeholder","onChange","onKeyDown","onClick","map","result"],"sources":["C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    // Format the search term\n    const formattedTerm = searchTerm.trim().toLowerCase();\n\n    // Fetch the data file\n    const { data } = await axios.get(\"/data.txt\");\n\n    // Split the data into lines\n    const lines = data.split(\"\\n\");\n\n    // Filter the lines that contain the search term\n    const filteredLines = lines.filter((line) =>\n      line.toLowerCase().includes(formattedTerm)\n    );\n    console.log(`filteredLines ${filteredLines} --------------`);\n    /*filteredLines nothing\tඅභාවය, ආකිංචන්‍යය, කිසිත් නැතිබව, ශූන්‍යය,nothingness\tඅකිංචනය, අභාවය, ශූන්‍යය,nothings\tපොඩි පොඩි දේ, වැදගැම්මකට නැති දේ -------------- */\n    // If there are no results, show an error message\n    if (filteredLines.length === 0) {\n      setSearchResults([\"No results found\"]);\n    } else {\n      // Move the matching line to the top of the results\n      const index = filteredLines.findIndex((line) =>\n        line.toLowerCase().includes(formattedTerm)\n      );\n      if (index !== 0) {\n        filteredLines.splice(0, 0, filteredLines.splice(index, 1)[0]);\n      }\n      setSearchResults(filteredLines);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {searchResults.map((result, index) => (\n        <div key={index}>{result}</div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}