{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasindu Rangika\\\\Desktop\\\\ReactAPP\\\\todolist\\\\React-Dictionary\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = async () => {\n    // Format the search term\n    const formattedTerm = searchTerm.trim().toLowerCase();\n\n    // Fetch the data file\n    const {\n      data\n    } = await axios.get(\"/data.txt\");\n\n    // Split the data into lines\n    const lines = data.split(\"\\n\");\n\n    // Filter the lines that contain the search term\n    const filteredLines = lines.filter(line => line.toLowerCase().includes(formattedTerm));\n\n    // If there are no results, show an error message\n    if (filteredLines.length === 0) {\n      setSearchResults([\"No results found\"]);\n    } else {\n      // Move the matching line to the top of the results\n      const index = filteredLines.findIndex(line => line.toLowerCase().includes(formattedTerm));\n      if (index !== 0) {\n        filteredLines.splice(0, 0, filteredLines.splice(index, 1)[0]);\n      }\n      setSearchResults(filteredLines);\n    }\n  };\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      value: searchTerm,\n      onChange: handleInputChange,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: result\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8K28tzN6aqWupSuTIMzTiRsrFxY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","handleSearch","formattedTerm","trim","toLowerCase","data","get","lines","split","filteredLines","filter","line","includes","length","index","findIndex","splice","handleInputChange","event","target","value","handleKeyDown","key","children","type","placeholder","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","result","_c","$RefreshReg$"],"sources":["C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    // Format the search term\n    const formattedTerm = searchTerm.trim().toLowerCase();\n\n    // Fetch the data file\n    const { data } = await axios.get(\"/data.txt\");\n\n    // Split the data into lines\n    const lines = data.split(\"\\n\");\n\n    // Filter the lines that contain the search term\n    const filteredLines = lines.filter((line) =>\n      line.toLowerCase().includes(formattedTerm)\n    );\n\n    // If there are no results, show an error message\n    if (filteredLines.length === 0) {\n      setSearchResults([\"No results found\"]);\n    } else {\n      // Move the matching line to the top of the results\n      const index = filteredLines.findIndex((line) =>\n        line.toLowerCase().includes(formattedTerm)\n      );\n      if (index !== 0) {\n        filteredLines.splice(0, 0, filteredLines.splice(index, 1)[0]);\n      }\n      setSearchResults(filteredLines);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {searchResults.map((result, index) => (\n        <div key={index}>{result}</div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,MAAMC,aAAa,GAAGL,UAAU,CAACM,IAAI,EAAE,CAACC,WAAW,EAAE;;IAErD;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,WAAW,CAAC;;IAE7C;IACA,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,IAAI,CAAC;;IAE9B;IACA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAEC,IAAI,IACtCA,IAAI,CAACP,WAAW,EAAE,CAACQ,QAAQ,CAACV,aAAa,CAAC,CAC3C;;IAED;IACA,IAAIO,aAAa,CAACI,MAAM,KAAK,CAAC,EAAE;MAC9Bb,gBAAgB,CAAC,CAAC,kBAAkB,CAAC,CAAC;IACxC,CAAC,MAAM;MACL;MACA,MAAMc,KAAK,GAAGL,aAAa,CAACM,SAAS,CAAEJ,IAAI,IACzCA,IAAI,CAACP,WAAW,EAAE,CAACQ,QAAQ,CAACV,aAAa,CAAC,CAC3C;MACD,IAAIY,KAAK,KAAK,CAAC,EAAE;QACfL,aAAa,CAACO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEP,aAAa,CAACO,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/D;MACAd,gBAAgB,CAACS,aAAa,CAAC;IACjC;EACF,CAAC;EAED,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACnCpB,aAAa,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,aAAa,GAAIH,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACI,GAAG,KAAK,OAAO,EAAE;MACzBrB,YAAY,EAAE;IAChB;EACF,CAAC;EAED,oBACEP,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,QAAQ;MACpBL,KAAK,EAAEvB,UAAW;MAClB6B,QAAQ,EAAET,iBAAkB;MAC5BU,SAAS,EAAEN;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB,eACFrC,OAAA;MAAQsC,OAAO,EAAE/B,YAAa;MAAAsB,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAC7ChC,aAAa,CAACkC,GAAG,CAAC,CAACC,MAAM,EAAEpB,KAAK,kBAC/BpB,OAAA;MAAA6B,QAAA,EAAkBW;IAAM,GAAdpB,KAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACnC,EAAA,CA3DQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}