{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasindu Rangika\\\\Desktop\\\\ReactAPP\\\\todolist\\\\React-Dictionary\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = async () => {\n    // format the search term as required\n    const formattedSearchTerm = searchTerm.trim().toLowerCase();\n\n    // search for lines that include the formatted search term\n    const {\n      data\n    } = await axios.get(\"data.txt\");\n    const matchingLines = data.split(\"\\n\").filter(line => line.toLowerCase().includes(formattedSearchTerm));\n\n    // find the line that contains the special word and make it first\n    const specialLine = matchingLines.find(line => line.includes(\"ප්‍රතිවරණය\"));\n    if (specialLine) {\n      matchingLines.splice(matchingLines.indexOf(specialLine), 1);\n      matchingLines.unshift(specialLine);\n    }\n\n    // update the search results\n    setSearchResults(matchingLines);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            handleSearch();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No results found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchResults.map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8K28tzN6aqWupSuTIMzTiRsrFxY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","handleSearch","formattedSearchTerm","trim","toLowerCase","data","get","matchingLines","split","filter","line","includes","specialLine","find","splice","indexOf","unshift","children","type","value","onChange","e","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    // format the search term as required\n    const formattedSearchTerm = searchTerm.trim().toLowerCase();\n\n    // search for lines that include the formatted search term\n    const { data } = await axios.get(\"data.txt\");\n    const matchingLines = data\n      .split(\"\\n\")\n      .filter((line) => line.toLowerCase().includes(formattedSearchTerm));\n\n    // find the line that contains the special word and make it first\n    const specialLine = matchingLines.find((line) =>\n      line.includes(\"ප්‍රතිවරණය\")\n    );\n    if (specialLine) {\n      matchingLines.splice(matchingLines.indexOf(specialLine), 1);\n      matchingLines.unshift(specialLine);\n    }\n\n    // update the search results\n    setSearchResults(matchingLines);\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              handleSearch();\n            }\n          }}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <div>\n        {searchResults.length === 0 ? (\n          <div>No results found.</div>\n        ) : (\n          <ul>\n            {searchResults.map((line, index) => (\n              <li key={index}>{line}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,MAAMC,mBAAmB,GAAGL,UAAU,CAACM,IAAI,EAAE,CAACC,WAAW,EAAE;;IAE3D;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,UAAU,CAAC;IAC5C,MAAMC,aAAa,GAAGF,IAAI,CACvBG,KAAK,CAAC,IAAI,CAAC,CACXC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACN,WAAW,EAAE,CAACO,QAAQ,CAACT,mBAAmB,CAAC,CAAC;;IAErE;IACA,MAAMU,WAAW,GAAGL,aAAa,CAACM,IAAI,CAAEH,IAAI,IAC1CA,IAAI,CAACC,QAAQ,CAAC,YAAY,CAAC,CAC5B;IACD,IAAIC,WAAW,EAAE;MACfL,aAAa,CAACO,MAAM,CAACP,aAAa,CAACQ,OAAO,CAACH,WAAW,CAAC,EAAE,CAAC,CAAC;MAC3DL,aAAa,CAACS,OAAO,CAACJ,WAAW,CAAC;IACpC;;IAEA;IACAZ,gBAAgB,CAACO,aAAa,CAAC;EACjC,CAAC;EAED,oBACEb,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,UAAW;QAClBuB,QAAQ,EAAGC,CAAC,IAAKvB,aAAa,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,SAAS,EAAGF,CAAC,IAAK;UAChB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;YACrBvB,YAAY,EAAE;UAChB;QACF;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eACFlC,OAAA;QAAQmC,OAAO,EAAE5B,YAAa;QAAAgB,QAAA,EAAC;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C,eACNlC,OAAA;MAAAuB,QAAA,EACGlB,aAAa,CAAC+B,MAAM,KAAK,CAAC,gBACzBpC,OAAA;QAAAuB,QAAA,EAAK;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,gBAE5BlC,OAAA;QAAAuB,QAAA,EACGlB,aAAa,CAACgC,GAAG,CAAC,CAACrB,IAAI,EAAEsB,KAAK,kBAC7BtC,OAAA;UAAAuB,QAAA,EAAiBP;QAAI,GAAZsB,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAChC,EAAA,CAvDQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}