{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasindu Rangika\\\\Desktop\\\\ReactAPP\\\\todolist\\\\React-Dictionary\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputWord, setInputWord] = useState(\"\");\n  const [searchedWords, setSearchedWords] = useState([]);\n  const [formattedData, setFormattedData] = useState(\"\");\n  const handleInputWordChange = event => {\n    setInputWord(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n  const handleSearch = () => {\n    const formattedInputWord = inputWord.trim().toLowerCase();\n    axios.get(\"/data.txt\").then(response => {\n      const data = response.data.split(\"\\n\");\n      const matchingLines = data.filter(line => line.trim().toLowerCase().includes(formattedInputWord));\n      if (matchingLines.length === 0) {\n        setFormattedData(\"No matching lines found.\");\n      } else {\n        const formattedMatchingLines = matchingLines.map(line => line.trim().toLowerCase());\n        const formattedDataArray = formattedMatchingLines.filter(line => line !== formattedInputWord);\n        formattedDataArray.unshift(formattedMatchingLines[0]);\n        setSearchedWords(formattedMatchingLines);\n        setFormattedData(formattedDataArray.join(\"\\n\"));\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputWord,\n      onChange: handleInputWordChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Searched words: \", searchedWords.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formattedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YlLqlJ4OD9vjn1x2/GOcSCMsQNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","inputWord","setInputWord","searchedWords","setSearchedWords","formattedData","setFormattedData","handleInputWordChange","event","target","value","handleKeyPress","key","handleSearch","formattedInputWord","trim","toLowerCase","get","then","response","data","split","matchingLines","filter","line","includes","length","formattedMatchingLines","map","formattedDataArray","unshift","join","catch","error","console","children","type","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [inputWord, setInputWord] = useState(\"\");\n  const [searchedWords, setSearchedWords] = useState([]);\n  const [formattedData, setFormattedData] = useState(\"\");\n\n  const handleInputWordChange = (event) => {\n    setInputWord(event.target.value);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  const handleSearch = () => {\n    const formattedInputWord = inputWord.trim().toLowerCase();\n\n    axios\n      .get(\"/data.txt\")\n      .then((response) => {\n        const data = response.data.split(\"\\n\");\n        const matchingLines = data.filter((line) =>\n          line.trim().toLowerCase().includes(formattedInputWord)\n        );\n        if (matchingLines.length === 0) {\n          setFormattedData(\"No matching lines found.\");\n        } else {\n          const formattedMatchingLines = matchingLines.map((line) =>\n            line.trim().toLowerCase()\n          );\n          const formattedDataArray = formattedMatchingLines.filter(\n            (line) => line !== formattedInputWord\n          );\n          formattedDataArray.unshift(formattedMatchingLines[0]);\n          setSearchedWords(formattedMatchingLines);\n          setFormattedData(formattedDataArray.join(\"\\n\"));\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputWord}\n        onChange={handleInputWordChange}\n        onKeyPress={handleKeyPress}\n      />\n      <button onClick={handleSearch}>Search</button>\n      <p>Searched words: {searchedWords.join(\", \")}</p>\n      <p>{formattedData}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}