{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasindu Rangika\\\\Desktop\\\\ReactAPP\\\\todolist\\\\React-Dictionary\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const handleSearch = async () => {\n    const formattedSearchTerm = searchTerm.trim().toLowerCase();\n    const {\n      data\n    } = await axios.get(\"/data.txt\");\n    const lines = data.split(\"\\n\");\n    const matchingLines = [];\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      if (line.includes(formattedSearchTerm)) {\n        matchingLines.push(line);\n      }\n    }\n    if (matchingLines.length === 0) {\n      setResults([\"No results found.\"]);\n      return;\n    }\n    const formattedLines = matchingLines.map(line => {\n      const isExactMatch = line.trim().toLowerCase() === formattedSearchTerm;\n      return {\n        line: line,\n        isExactMatch: isExactMatch\n      };\n    });\n    formattedLines.sort((a, b) => {\n      if (a.isExactMatch) return -1;\n      if (b.isExactMatch) return 1;\n      return a.line.localeCompare(b.line);\n    });\n    const formattedResults = formattedLines.map(_ref => {\n      let {\n        line\n      } = _ref;\n      return line;\n    });\n    setResults(formattedResults);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      onKeyPress: e => {\n        if (e.key === \"Enter\") handleSearch();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: results.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Dzd3js2aWHRTUGP7ptU4Wu90Hnw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","results","setResults","handleSearch","formattedSearchTerm","trim","toLowerCase","data","get","lines","split","matchingLines","i","length","line","includes","push","formattedLines","map","isExactMatch","sort","a","b","localeCompare","formattedResults","_ref","children","type","value","onChange","e","target","onKeyPress","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  const handleSearch = async () => {\n    const formattedSearchTerm = searchTerm.trim().toLowerCase();\n    const { data } = await axios.get(\"/data.txt\");\n    const lines = data.split(\"\\n\");\n    const matchingLines = [];\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      if (line.includes(formattedSearchTerm)) {\n        matchingLines.push(line);\n      }\n    }\n    if (matchingLines.length === 0) {\n      setResults([\"No results found.\"]);\n      return;\n    }\n    const formattedLines = matchingLines.map((line) => {\n      const isExactMatch = line.trim().toLowerCase() === formattedSearchTerm;\n      return { line: line, isExactMatch: isExactMatch };\n    });\n    formattedLines.sort((a, b) => {\n      if (a.isExactMatch) return -1;\n      if (b.isExactMatch) return 1;\n      return a.line.localeCompare(b.line);\n    });\n    const formattedResults = formattedLines.map(({ line }) => line);\n    setResults(formattedResults);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        onKeyPress={(e) => {\n          if (e.key === \"Enter\") handleSearch();\n        }}\n      />\n      <button onClick={handleSearch}>Search</button>\n      <div>\n        {results.map((line, i) => (\n          <div key={i}>{line}</div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}