{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasindu Rangika\\\\Desktop\\\\ReactAPP\\\\todolist\\\\React-Dictionary\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(\"/data.txt\");\n      const data = response.data.split(\"\\n\").map(line => line.trim());\n      const formattedSearchTerm = searchTerm.toLowerCase().trim();\n      const filteredData = data.filter(line => line.includes(formattedSearchTerm));\n      if (filteredData.length === 0) {\n        setSearchResults([]);\n        alert(`No results found for \"${formattedSearchTerm}\"`);\n        return;\n      }\n      const formattedData = filteredData.map(line => ({\n        line: line,\n        similarity: getSimilarity(line, formattedSearchTerm)\n      })).sort((a, b) => b.similarity - a.similarity);\n      const result = formattedData.map(_ref => {\n        let {\n          line\n        } = _ref;\n        return line;\n      });\n      const index = result.findIndex(line => line.includes(formattedSearchTerm));\n      if (index !== -1) {\n        const firstLine = result[index];\n        result.splice(index, 1);\n        result.unshift(firstLine);\n      }\n      setSearchResults(result);\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while fetching the data\");\n    }\n  };\n  const getSimilarity = (string1, string2) => {\n    const longer = string1.length > string2.length ? string1 : string2;\n    const shorter = string1.length > string2.length ? string2 : string1;\n    const longerLength = longer.length;\n    if (longerLength === 0) return 1.0;\n    return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n  };\n  const editDistance = (string1, string2) => {\n    string1 = string1.toLowerCase().trim();\n    string2 = string2.toLowerCase().trim();\n    const costs = new Array();\n    for (let i = 0; i <= string1.length; i++) {\n      let lastValue = i;\n      for (let j = 0; j <= string2.length; j++) {\n        if (i === 0) {\n          costs[j] = j;\n        } else {\n          if (j > 0) {\n            let newValue = costs[j - 1];\n            if (string1.charAt(i - 1) !== string2.charAt(j - 1)) {\n              newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n            }\n            costs[j - 1] = lastValue;\n            lastValue = newValue;\n          }\n        }\n      }\n      if (i > 0) {\n        costs[string2.length] = lastValue;\n      }\n    }\n    return costs[string2.length];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      onKeyPress: e => e.key === \"Enter\" && handleSearch()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), searchResults.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8K28tzN6aqWupSuTIMzTiRsrFxY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","handleSearch","response","get","data","split","map","line","trim","formattedSearchTerm","toLowerCase","filteredData","filter","includes","length","alert","formattedData","similarity","getSimilarity","sort","a","b","result","_ref","index","findIndex","firstLine","splice","unshift","error","console","string1","string2","longer","shorter","longerLength","editDistance","parseFloat","costs","Array","i","lastValue","j","newValue","charAt","Math","min","children","type","value","onChange","e","target","onKeyPress","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hasindu Rangika/Desktop/ReactAPP/todolist/React-Dictionary/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(\"/data.txt\");\n      const data = response.data.split(\"\\n\").map((line) => line.trim());\n\n      const formattedSearchTerm = searchTerm.toLowerCase().trim();\n      const filteredData = data.filter((line) =>\n        line.includes(formattedSearchTerm)\n      );\n\n      if (filteredData.length === 0) {\n        setSearchResults([]);\n        alert(`No results found for \"${formattedSearchTerm}\"`);\n        return;\n      }\n\n      const formattedData = filteredData\n        .map((line) => ({\n          line: line,\n          similarity: getSimilarity(line, formattedSearchTerm),\n        }))\n        .sort((a, b) => b.similarity - a.similarity);\n\n      const result = formattedData.map(({ line }) => line);\n\n      const index = result.findIndex((line) =>\n        line.includes(formattedSearchTerm)\n      );\n      if (index !== -1) {\n        const firstLine = result[index];\n        result.splice(index, 1);\n        result.unshift(firstLine);\n      }\n\n      setSearchResults(result);\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while fetching the data\");\n    }\n  };\n\n  const getSimilarity = (string1, string2) => {\n    const longer = string1.length > string2.length ? string1 : string2;\n    const shorter = string1.length > string2.length ? string2 : string1;\n    const longerLength = longer.length;\n    if (longerLength === 0) return 1.0;\n    return (\n      (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength)\n    );\n  };\n\n  const editDistance = (string1, string2) => {\n    string1 = string1.toLowerCase().trim();\n    string2 = string2.toLowerCase().trim();\n    const costs = new Array();\n    for (let i = 0; i <= string1.length; i++) {\n      let lastValue = i;\n      for (let j = 0; j <= string2.length; j++) {\n        if (i === 0) {\n          costs[j] = j;\n        } else {\n          if (j > 0) {\n            let newValue = costs[j - 1];\n            if (string1.charAt(i - 1) !== string2.charAt(j - 1)) {\n              newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n            }\n            costs[j - 1] = lastValue;\n            lastValue = newValue;\n          }\n        }\n      }\n      if (i > 0) {\n        costs[string2.length] = lastValue;\n      }\n    }\n    return costs[string2.length];\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        onKeyPress={(e) => e.key === \"Enter\" && handleSearch()}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {searchResults.length === 0 ? (\n        <div>No results</div>\n      ) : (\n        <ul>\n          {searchResults.map((line, index) => (\n            <li key={index}>{line}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}